{"version":3,"sources":["components/Button.js","components/Task.js","components/Tasks.js","components/Header.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","Tasks","tasks","map","Header","title","onAdd","showAdd","AddTask","useState","setText","day","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38921366.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n\r\n    return (\r\n    <button \r\n    \r\n    onClick={onClick} \r\n    style={{backgroundColor: color}}\r\n    className='btn'\r\n\r\n    >\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : '' }`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor:'pointer' }} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.id}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n\r\n        <>\r\n          {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button.js'\r\nimport Tasks from './Tasks.js'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n           \r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n        <div className='form-control'>\r\n            <label>Day & Time</label>\r\n            <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n        </div>\r\n        <div className='form-control form-control-check'>\r\n            <label>Set Reminder</label>\r\n            <input type='checkbox' value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} checked={reminder} />\r\n        </div>\r\n        <input type='submit' value='Save Task' className='btn btn-block'/>\r\n</form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState } from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(true)\n\n  const [tasks, setTasks] = useState([\n    {\n        text: 'hello',\n        id: 1,\n        reminder: false,\n    },\n    {\n        text: 'goodbye',\n        id: 2,\n        reminder: true,\n    },\n    {\n        text: 'goodmorning',\n        id: 3,\n        reminder: false,\n    }])\n\n    //Add Task\n    const addTask = (task) => {\n      const id = Math.floor(Math.random() * 10000) + 1\n      const newTask = { id, ...task }\n      setTasks([...tasks, newTask])\n\n    }\n\n\n    // Delete task\n    const deleteTask = (id) => {\n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n\n    // Toggle reminder\n    const toggleReminder = (id) => {\n      setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n    }\n\n  return (\n    <div className=\"container\">\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     \n     {showAddTask && <AddTask onAdd={addTask}/>}\n\n     {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No tasks to show'}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}